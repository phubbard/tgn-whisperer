# For each episode, we download the MP3, for local hosting, and then call out to WhisperX.
# Once that's done, we convert the output to markdown and deploy it to the site.
# Made much simpler by having a JSON config file (fields extracted via jq) and
# fixed filenames for each step of the process.
# The jq output results in embedded quote characters, so we need two steps. Three, to cache the jq step.
dest_dir:=$(shell cat episode.json | jq .site_directory)

# These look like "/Users/hubbard/code/tgn-whisperer/sites/tgn/docs/2"/episode.mp3
p_dest_mp3=$(dest_dir)/episode.mp3
p_dest_txt=$(dest_dir)/episode.txt
p_dest_html=$(dest_dir)/episode.html
p_dest_md=$(dest_dir)/episode.md

# and this erases the quote characters
dest_mp3=$(shell echo $(p_dest_mp3))
dest_txt=$(shell echo $(p_dest_txt))
dest_html=$(shell echo $(p_dest_html))
dest_md=$(shell echo $(p_dest_md))

# Declare the target three files and a single target name for manual ops
all: $(dest_mp3) $(dest_txt) $(dest_html) $(dest_md) speaker-map.json

$(dest_mp3): episode.mp3
	cp -c episode.mp3 $(dest_mp3)

$(dest_txt): episode.txt
	cp -c episode.txt $(dest_txt)

$(dest_html): episode.html
	cp -c episode.html $(dest_html)

$(dest_md): episode.md
	cp -c episode.md $(dest_md)

# Now declare how to create them.
episode.mp3:
	@echo Now downloading $(shell pwd)
	cat episode.json | jq .mp3_url | xargs wget -nc --no-use-server-timestamps -O episode.mp3

episode-transcribed.json: episode.mp3 openai.json
	@echo Now transcribing $(shell pwd)
	curl -X POST -H "Content-Type: application/json" -H "Authorization: Bearer $$OCTOAI_TOKEN" https://tgn-whisperer-rux09g7ahp4l.octoai.run/predict --data @./openai.json -o episode-transcribed.json --fail --remove-on-error

episode.txt: episode-transcribed.json
	cat episode-transcribed.json | jq .transcription > episode.txt

episode.html: episode.json
	cat episode.json | jq .episode_url | xargs wget -O episode.html --convert-links

episode.md: episode.txt
	python3 ../../../app/to_markdown.py

speaker-map.json: episode-transcribed.json episode.md
	python3 ../../../app/oai-cleanup.py

clean:
	-rm episode.mp3 episode.txt episode.md episode.html episode-transcribed.json